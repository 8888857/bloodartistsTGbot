from aiogram import Bot, Dispatcher, executor, types
import config
from config import TOKEN
import database as db

# Initialize bot and dispatcher
client_ = Bot(token=TOKEN)
client = Dispatcher(client_)

async def main():
    db.sshserver()
    await db.main()
    client_info = client_.get_me()
    print(f"{client_info.username} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω.")
    

@client.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç!\n–Ø \"BloodArtists\" - –±–æ—Ç —Å–æ–∑–¥–∞–Ω—ã–π –¥–ª—è —Ä–∞–Ω–≥–æ–≤–æ–π –∏ –≤–∞–ª—é—Ç–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —á–∞—Ç–∞ \"ü©∏–ö—Ä–æ–≤–∞–≤—ã–µ –•—É–¥–æ–∂–Ω–∏–∫–∏ü©∏\"\n\n–±–æ—Ç–∞ —Å–æ–∑–¥–∞–ª @GipoGram", parse_mode="Markdown")
    
@client.message_handler(commands=["–ø—Ä–æ—Ñ–∏–ª—å", "profile"])
async def profile_(message: types.Message):
    exp=await db.get_exp(message, message.from_user.id)
    lvl=None
    barv=await db.get_barv(message, message.from_user.id)
    admin_lvl=await db.get_admin_lvl(message, message.from_user.id)
    if admin_lvl == 2:
        role="\n–†–æ–ª—å: –ê–¥–º–∏–Ω"
    elif admin_lvl == 1:
        role="\n–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä"
    else:
        role=None
    await message.reply(f"–ü—Ä–æ—Ñ–∏–ª—å {message.from_user.username}\n–£—Ä–æ–≤–µ–Ω—å: {lvl}\n–û–ø—ã—Ç: {exp/10}\n–ë–∞—Ä–≤—ãü™ô: {barv}{role}")
    
@client.message_handler()
async def on_message(message: types.Message):
    await 
    await db.add_exp(message, message.from_user.id, 1)
    
if __name__ == '__main__':
    executor.start_polling(client, skip_updates=True)